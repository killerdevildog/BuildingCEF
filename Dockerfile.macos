# CEF macOS Build Environment
# Note: This uses a Ubuntu base with cross-compilation tools for macOS
# For true macOS builds, use GitHub Actions macOS runners or actual macOS hardware
FROM ubuntu:24.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
ENV PYTHONUNBUFFERED=1
ENV CEF_USE_GN=1
ENV MACOSX_DEPLOYMENT_TARGET=10.15

# Install basic dependencies
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    git \
    python3 \
    python3-pip \
    python3-venv \
    build-essential \
    software-properties-common \
    locales \
    clang \
    libc++-dev \
    libc++abi-dev \
    && locale-gen en_US.UTF-8

# Install macOS cross-compilation toolchain
RUN apt-get install -y \
    cmake \
    ninja-build \
    pkg-config \
    libtool \
    automake \
    bison \
    flex \
    gperf \
    ruby \
    libbz2-dev \
    libffi-dev \
    libgdbm-dev \
    libncurses5-dev \
    libreadline-dev \
    libssl-dev \
    libyaml-dev \
    libsqlite3-dev \
    sqlite3 \
    zlib1g-dev \
    uuid-dev \
    libxml2-dev \
    libxslt-dev \
    file \
    zip \
    unzip

# Install osxcross for macOS cross-compilation
WORKDIR /opt
RUN git clone https://github.com/tpoechtrager/osxcross.git && \
    cd osxcross && \
    wget -O tarballs/MacOSX12.3.sdk.tar.xz \
    https://github.com/joseluisq/macosx-sdks/releases/download/12.3/MacOSX12.3.sdk.tar.xz && \
    UNATTENDED=yes OSX_VERSION_MIN=10.15 ./build.sh

# Add osxcross to PATH
ENV PATH="/opt/osxcross/target/bin:${PATH}"

# Set up Python environment
RUN python3 -m pip install --upgrade pip setuptools wheel

# Create workspace
WORKDIR /workspace

# Copy CEF source code from submodule
COPY cef-source/ /workspace/cef-source/

# Create builds output directory
RUN mkdir -p /workspace/builds

# Install CEF build dependencies using their script
WORKDIR /workspace/cef-source
RUN python3 tools/install-build-deps.py --no-prompt

# Set up depot_tools (required for CEF builds)
RUN git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git /workspace/depot_tools
ENV PATH="/workspace/depot_tools:${PATH}"

# Configure macOS-specific environment variables
ENV CC=o64-clang
ENV CXX=o64-clang++
ENV AR=x86_64-apple-darwin21.4-ar
ENV STRIP=x86_64-apple-darwin21.4-strip
ENV GYP_DEFINES="OS=mac"

# Configure build environment for macOS
RUN python3 tools/automate/automate-git.py \
    --download-dir=/workspace/chromium_git \
    --depot-tools-dir=/workspace/depot_tools \
    --no-distrib \
    --no-build \
    --branch=master

# Set up macOS build configuration
WORKDIR /workspace/chromium_git/chromium/src
RUN echo 'import("//build/args/headless.gni")' > args.gn && \
    echo 'target_os = "mac"' >> args.gn && \
    echo 'target_cpu = "x64"' >> args.gn && \
    echo 'is_debug = false' >> args.gn && \
    echo 'is_component_build = false' >> args.gn && \
    echo 'symbol_level = 1' >> args.gn && \
    echo 'use_sysroot = false' >> args.gn && \
    echo 'treat_warnings_as_errors = false' >> args.gn

# Build CEF for macOS
WORKDIR /workspace/chromium_git/chromium/src/cef
RUN python3 tools/make_distrib.py \
    --ninja-build \
    --x64-build \
    --mac-build \
    --output-dir=/workspace/builds

# Set final working directory
WORKDIR /workspace

# Entry point for building CEF
CMD ["python3", "/workspace/cef-source/tools/automate/automate-git.py", \
     "--download-dir=/workspace/chromium_git", \
     "--depot-tools-dir=/workspace/depot_tools", \
     "--distrib-subdir=macosx64", \
     "--output-dir=/workspace/builds", \
     "--x64-build", \
     "--mac-build", \
     "--branch=master"]
